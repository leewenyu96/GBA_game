# 1 "main.c"
# 1 "<built-in>"
# 1 "<command line>"
# 1 "main.c"



# 1 "sprites.h" 1
# 1 "gba.h" 1







typedef unsigned char u8;
typedef unsigned short u16;
typedef unsigned int u32;

typedef signed char s8;
typedef signed short s16;
typedef signed int s32;

typedef unsigned char byte;
typedef unsigned short hword;
typedef unsigned int word;
# 211 "gba.h"
enum
{
    VBLANK_HANDLER,
    HBLANK_HANDLER,
    VCOUNT_HANDLER,
    TIMER0_HANDLER,
    TIMER1_HANDLER,
    TIMER2_HANDLER,
    TIMER3_HANDLER,
    SERIAL_COM_HANDLER,
    DMA0_HANDLER,
    DMA1_HANDLER,
    DMA2_HANDLER,
    DMA3_HANDLER,
    KEYS_HANDLER,
    CART_HANDLER,
    MAX_INTERRUPT_HANDLERS,
};
# 267 "gba.h"
typedef void (*fp)(void);
# 2 "sprites.h" 2




int palette[] = {
((0) + (0<<5) + (0<<10)),
((31) + (31<<5) + (31<<10)),
((0) + (31<<5) + (31<<10)),
((26) + (26<<5) + (26<<10)),
((9) + (9<<5) + (9<<10)),
((31) + (31<<5) + (0<<10)),
((31) + (0<<5) + (0<<10)),
((0) + (0<<5) + (31<<10)),
((11) + (8<<5) + (3<<10)),
((27) + (27<<5) + (27<<10)),
((16) + (16<<5) + (16<<10)),
((31) + (17<<5) + (17<<10)),
((31) + (24<<5) + (24<<10)),
((27) + (0<<5) + (0<<10)),
((0) + (16<<5) + (0<<10)),
((0) + (31<<5) + (0<<10)),
((16) + (31<<5) + (16<<10)),
((23) + (31<<5) + (23<<10)),
((31) + (17<<5) + (0<<10)),
((0) + (0<<5) + (15<<10))
};




u16 sprites[] = {


0,0,0,0,0,0,0,1,
0,0,0,0,0,0,1,1,
0,0,0,0,0,0,1,1,
0,0,0,0,0,1,1,1,
0,0,0,0,0,1,4,4,
0,0,0,0,1,4,4,4,
0,0,0,0,1,1,1,1,
0,0,0,0,1,1,1,1,

1,0,0,0,0,0,0,0,
1,1,0,0,0,0,0,0,
1,1,0,0,0,0,0,0,
1,1,1,0,0,0,0,0,
4,4,1,0,0,0,0,0,
4,4,4,1,0,0,0,0,
1,1,1,1,0,0,0,0,
1,1,1,1,0,0,0,0,

0,0,0,0,1,1,1,1,
0,0,0,0,1,1,1,1,
0,0,0,19,1,1,1,1,
0,0,1,19,1,1,4,4,
0,1,1,19,1,1,4,18,
1,1,1,19,1,6,18,18,
0,0,0,0,0,0,6,18,
0,0,0,0,0,0,0,6,

1,1,1,1,0,0,0,0,
1,1,1,1,0,0,0,0,
1,1,1,1,19,0,0,0,
4,4,1,1,19,1,0,0,
18,4,1,1,19,1,1,0,
18,18,6,1,19,1,1,1,
18,6,0,0,0,0,0,0,
6,0,0,0,0,0,0,0,



0,0,1,1,1,1,0,0,
0,1,1,1,1,1,1,0,
0,1,1,0,0,0,0,0,
0,1,1,1,1,1,0,0,
0,0,1,1,1,1,1,0,
0,0,0,0,0,0,1,0,
0,1,1,1,1,1,1,0,
0,0,1,1,1,1,0,0,

0,1,1,1,1,1,1,0,
0,1,1,1,1,1,1,0,
0,0,0,1,1,0,0,0,
0,0,0,1,1,0,0,0,
0,0,0,1,1,0,0,0,
0,0,0,1,1,0,0,0,
0,0,0,1,1,0,0,0,
0,0,0,1,1,0,0,0,

0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,

0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,



0,0,1,1,1,1,0,0,
0,1,1,1,1,1,1,0,
0,1,1,0,0,1,1,0,
0,1,1,0,0,1,1,0,
0,1,1,1,1,1,1,0,
0,1,1,1,1,1,1,0,
0,1,1,0,0,1,1,0,
0,1,1,0,0,1,1,0,

0,1,1,1,1,1,0,0,
0,1,1,0,0,1,1,0,
0,1,1,0,0,1,1,0,
0,1,1,1,1,1,0,0,
0,1,1,1,1,0,0,0,
0,1,1,0,1,1,0,0,
0,1,1,0,0,1,1,0,
0,1,1,0,0,0,1,1,

0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,

0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,



0,1,1,1,1,1,1,0,
0,1,1,1,1,1,1,0,
0,0,0,1,1,0,0,0,
0,0,0,1,1,0,0,0,
0,0,0,1,1,0,0,0,
0,0,0,1,1,0,0,0,
0,0,0,1,1,0,0,0,
0,0,0,1,1,0,0,0,


0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,


0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,


0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,




0,0,0,0,0,2,2,2,
0,0,0,0,2,3,3,3,
0,0,0,2,3,3,15,15,
0,0,0,2,3,15,0,15,
0,0,0,2,3,15,15,15,
0,6,6,6,2,2,2,2,
6,6,6,6,6,6,6,6,
6,6,6,6,1,1,6,6,

2,2,2,0,0,0,0,0,
3,3,3,2,0,0,0,0,
15,15,3,3,2,0,0,0,
15,0,15,3,2,0,0,0,
15,15,15,3,2,0,0,0,
2,2,2,2,6,6,6,0,
6,6,6,6,6,6,6,6,
6,6,1,1,6,6,6,6,

6,6,6,6,1,1,6,6,
0,6,6,6,6,6,6,6,
0,0,0,0,0,0,5,5,
0,0,0,0,0,5,5,5,
0,0,0,0,5,5,5,5,
0,0,0,5,5,5,5,5,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,

6,6,1,1,6,6,6,6,
6,6,6,6,6,6,6,0,
5,5,0,0,0,0,0,0,
5,5,5,0,0,0,0,0,
5,5,5,5,0,0,0,0,
5,5,5,5,5,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,




0,0,0,0,0,1,1,1,
0,0,0,0,1,1,1,1,
0,0,0,1,1,1,0,0,
0,0,1,1,1,0,0,0,
0,0,1,1,1,1,0,0,
0,0,0,1,1,1,1,0,
0,0,0,0,1,1,1,1,
0,0,0,0,0,1,1,1,


1,1,1,1,0,0,0,0,
1,1,1,1,1,0,0,0,
0,0,0,1,1,1,0,0,
0,0,0,1,1,1,0,0,
0,0,0,1,1,1,0,0,
0,0,0,1,1,1,0,0,
0,0,0,0,0,0,0,0,
1,0,0,0,0,0,0,0,


0,0,0,0,0,0,0,1,
0,0,0,0,0,0,0,0,
0,0,1,1,1,0,0,0,
0,0,1,1,1,0,0,0,
0,0,1,1,1,0,0,0,
0,0,1,1,1,0,0,0,
0,0,0,1,1,1,1,1,
0,0,0,0,1,1,1,1,


1,1,1,0,0,0,0,0,
1,1,1,1,0,0,0,0,
0,1,1,1,1,0,0,0,
0,0,1,1,1,1,0,0,
0,0,0,1,1,1,0,0,
0,0,1,1,1,0,0,0,
1,1,1,1,0,0,0,0,
1,1,1,0,0,0,0,0,



0,0,1,1,1,1,1,1,
0,1,1,1,1,1,1,1,
0,1,1,1,1,1,1,1,
0,1,1,1,1,0,0,0,
0,1,1,1,0,0,0,0,
0,1,1,1,0,0,0,0,
0,1,1,1,0,0,0,0,
0,1,1,1,1,0,0,0,

1,1,1,1,0,0,0,0,
1,1,1,1,1,0,0,0,
1,1,1,1,1,1,0,0,
0,0,1,1,1,1,0,0,
0,0,0,1,1,1,0,0,
0,0,0,1,1,1,0,0,
0,0,0,1,1,1,0,0,
0,0,1,1,1,1,0,0,

0,1,1,1,1,1,1,1,
0,1,1,1,1,1,1,1,
0,1,1,1,1,1,1,1,
0,1,1,1,0,0,0,0,
0,1,1,1,0,0,0,0,
0,1,1,1,0,0,0,0,
0,1,1,1,0,0,0,0,
0,1,1,1,0,0,0,0,

1,1,1,1,1,0,0,0,
1,1,1,1,0,0,0,0,
1,1,1,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,




0,0,0,0,0,1,1,1,
0,0,0,0,1,1,1,1,
0,0,0,1,1,1,0,0,
0,0,1,1,1,0,0,0,
0,0,1,1,1,0,0,0,
0,0,1,1,1,0,0,0,
0,0,1,1,1,1,0,0,
0,0,1,1,1,1,1,1,


1,1,1,0,0,0,0,0,
1,1,1,1,0,0,0,0,
0,0,1,1,1,0,0,0,
0,0,0,1,1,1,0,0,
0,0,0,1,1,1,0,0,
0,0,0,1,1,1,0,0,
0,0,1,1,1,1,0,0,
1,1,1,1,1,1,0,0,


0,0,1,1,1,1,1,1,
0,0,1,1,1,0,0,0,
0,0,1,1,1,0,0,0,
0,0,1,1,1,0,0,0,
0,0,1,1,1,0,0,0,
0,0,1,1,1,0,0,0,
0,0,1,1,1,0,0,0,
0,0,1,1,1,0,0,0,


1,1,1,1,1,1,0,0,
0,0,0,1,1,1,0,0,
0,0,0,1,1,1,0,0,
0,0,0,1,1,1,0,0,
0,0,0,1,1,1,0,0,
0,0,0,1,1,1,0,0,
0,0,0,1,1,1,0,0,
0,0,0,1,1,1,0,0,




0,0,0,0,0,1,1,1,
0,0,0,0,1,1,1,1,
0,0,0,1,1,1,1,1,
0,0,1,1,1,1,0,0,
0,0,1,1,1,0,0,0,
0,0,1,1,1,0,0,0,
0,0,1,1,1,0,0,0,
0,0,1,1,1,0,0,0,


1,1,1,0,0,0,0,0,
1,1,1,1,0,0,0,0,
1,1,1,1,1,0,0,0,
0,0,1,1,1,1,0,0,
0,0,0,1,1,1,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,


0,0,1,1,1,0,0,0,
0,0,1,1,1,0,0,0,
0,0,1,1,1,0,0,0,
0,0,1,1,1,0,0,0,
0,0,1,1,1,1,0,0,
0,0,0,1,1,1,1,1,
0,0,0,0,1,1,1,1,
0,0,0,0,0,1,1,1,


0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,1,1,1,0,0,
0,0,1,1,1,1,0,0,
1,1,1,1,1,0,0,0,
1,1,1,1,0,0,0,0,
1,1,1,0,0,0,0,0,




0,0,1,1,1,1,1,1,
0,0,1,1,1,1,1,1,
0,0,1,1,1,1,1,1,
0,0,1,1,1,0,0,0,
0,0,1,1,1,0,0,0,
0,0,1,1,1,0,0,0,
0,0,1,1,1,0,0,0,
0,0,1,1,1,1,1,1,


1,1,1,1,1,1,0,0,
1,1,1,1,1,1,0,0,
1,1,1,1,1,1,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
1,1,1,1,0,0,0,0,


0,0,1,1,1,1,1,1,
0,0,1,1,1,0,0,0,
0,0,1,1,1,0,0,0,
0,0,1,1,1,0,0,0,
0,0,1,1,1,0,0,0,
0,0,1,1,1,1,1,1,
0,0,1,1,1,1,1,1,
0,0,1,1,1,1,1,1,


1,1,1,1,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
1,1,1,1,1,1,0,0,
1,1,1,1,1,1,0,0,
1,1,1,1,1,1,0,0,




0,0,1,1,1,1,1,1,
0,0,1,1,1,1,1,1,
0,0,1,1,1,1,1,1,
0,0,1,1,1,0,0,0,
0,0,1,1,1,0,0,0,
0,0,1,1,1,0,0,0,
0,0,1,1,1,0,0,0,
0,0,1,1,1,1,1,1,


1,1,1,1,1,1,0,0,
1,1,1,1,1,1,0,0,
1,1,1,1,1,1,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
1,1,1,1,0,0,0,0,


0,0,1,1,1,1,1,1,
0,0,1,1,1,0,0,0,
0,0,1,1,1,0,0,0,
0,0,1,1,1,0,0,0,
0,0,1,1,1,0,0,0,
0,0,1,1,1,1,1,1,
0,0,1,1,1,1,1,1,
0,0,1,1,1,1,1,1,


1,1,1,1,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
1,1,1,1,1,1,0,0,
1,1,1,1,1,1,0,0,
1,1,1,1,1,1,0,0,




0,0,1,1,1,0,0,0,
0,0,1,1,1,0,0,0,
0,0,0,1,1,1,0,0,
0,0,0,1,1,1,0,0,
0,0,0,0,1,1,1,0,
0,0,0,0,1,1,1,0,
0,0,0,0,0,1,1,1,
0,0,0,0,0,1,1,1,


0,0,0,1,1,1,0,0,
0,0,0,1,1,1,0,0,
0,0,1,1,1,0,0,0,
0,0,1,1,1,0,0,0,
0,1,1,1,0,0,0,0,
0,1,1,1,0,0,0,0,
1,1,1,0,0,0,0,0,
1,1,1,0,0,0,0,0,


0,0,0,0,0,1,1,1,
0,0,0,0,0,1,1,1,
0,0,0,0,1,1,1,0,
0,0,0,0,1,1,1,0,
0,0,0,1,1,1,0,0,
0,0,0,1,1,1,0,0,
0,0,1,1,1,0,0,0,
0,0,1,1,1,0,0,0,


1,1,1,0,0,0,0,0,
1,1,1,0,0,0,0,0,
0,1,1,1,0,0,0,0,
0,1,1,1,0,0,0,0,
0,0,1,1,1,0,0,0,
0,0,1,1,1,0,0,0,
0,0,0,1,1,1,0,0,
0,0,0,1,1,1,0,0,



0,0,0,1,1,1,1,1,
0,0,1,1,1,1,1,1,
0,1,1,1,1,1,1,1,
0,1,1,1,1,0,0,0,
0,1,1,1,0,0,0,0,
0,1,1,1,0,0,0,0,
0,1,1,1,0,0,0,0,
0,1,1,1,1,0,0,0,

1,1,1,1,0,0,0,0,
1,1,1,1,1,0,0,0,
1,1,1,1,1,1,0,0,
0,0,1,1,1,1,0,0,
0,0,0,1,1,1,0,0,
0,0,0,1,1,1,0,0,
0,0,0,1,1,1,0,0,
0,0,1,1,1,1,0,0,

0,1,1,1,1,1,1,1,
0,1,1,1,1,1,1,1,
0,1,1,1,1,1,1,1,
0,1,1,1,0,0,0,0,
0,1,1,1,0,0,0,0,
0,1,1,1,0,0,0,0,
0,1,1,1,0,0,0,0,
0,1,1,1,0,0,0,0,

1,1,1,1,1,0,0,0,
1,1,1,1,0,0,0,0,
1,1,1,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,




0,0,1,1,1,0,0,0,
0,0,1,1,1,0,0,0,
0,0,1,1,1,0,0,0,
0,0,1,1,1,0,0,0,
0,0,1,1,1,0,0,0,
0,0,1,1,1,0,0,0,
0,0,1,1,1,0,0,0,
0,0,1,1,1,0,0,0,


0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,


0,0,1,1,1,0,0,0,
0,0,1,1,1,0,0,0,
0,0,1,1,1,0,0,0,
0,0,1,1,1,0,0,0,
0,0,1,1,1,0,0,0,
0,0,1,1,1,1,1,1,
0,0,1,1,1,1,1,1,
0,0,1,1,1,1,1,1,


0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
1,1,1,1,1,1,0,0,
1,1,1,1,1,1,0,0,
1,1,1,1,1,1,0,0,




0,0,0,0,0,1,1,1,
0,0,0,0,1,1,1,1,
0,0,0,1,1,1,0,0,
0,0,1,1,1,0,0,0,
0,0,1,1,1,0,0,0,
0,0,1,1,1,0,0,0,
0,0,1,1,1,0,0,0,
0,0,1,1,1,0,0,0,


1,1,1,0,0,0,0,0,
1,1,1,1,0,0,0,0,
0,0,1,1,1,0,0,0,
0,0,0,1,1,1,0,0,
0,0,0,1,1,1,0,0,
0,0,0,1,1,1,0,0,
0,0,0,1,1,1,0,0,
0,0,0,1,1,1,0,0,


0,0,1,1,1,0,0,0,
0,0,1,1,1,0,0,0,
0,0,1,1,1,0,0,0,
0,0,1,1,1,0,0,0,
0,0,1,1,1,0,0,0,
0,0,0,1,1,1,0,0,
0,0,0,0,1,1,1,1,
0,0,0,0,0,1,1,1,


0,0,0,1,1,1,0,0,
0,0,0,1,1,1,0,0,
0,0,0,1,1,1,0,0,
0,0,0,1,1,1,0,0,
0,0,0,1,1,1,0,0,
0,0,1,1,1,0,0,0,
1,1,1,1,0,0,0,0,
1,1,1,0,0,0,0,0,




0,0,1,1,1,1,1,1,
0,0,1,1,1,1,1,1,
0,0,1,1,1,0,0,0,
0,0,1,1,1,0,0,0,
0,0,1,1,1,0,0,0,
0,0,1,1,1,0,0,0,
0,0,1,1,1,0,0,0,
0,0,1,1,1,0,0,0,


1,1,1,0,0,0,0,0,
1,1,1,1,0,0,0,0,
0,0,1,1,1,0,0,0,
0,0,0,1,1,1,0,0,
0,0,0,1,1,1,0,0,
0,0,0,1,1,1,0,0,
0,0,0,1,1,1,0,0,
0,0,1,1,1,0,0,0,


0,0,1,1,1,1,1,1,
0,0,1,1,1,1,1,1,
0,0,1,1,1,0,0,0,
0,0,1,1,1,0,0,0,
0,0,1,1,1,0,0,0,
0,0,1,1,1,0,0,0,
0,0,1,1,1,0,0,0,
0,0,1,1,1,0,0,0,


1,1,1,1,0,0,0,0,
1,1,1,0,0,0,0,0,
0,1,1,1,0,0,0,0,
0,0,1,1,1,0,0,0,
0,0,0,1,1,1,0,0,
0,0,0,1,1,1,0,0,
0,0,0,1,1,1,0,0,
0,0,0,1,1,1,0,0,




0,0,1,1,1,1,1,1,
0,0,1,1,1,1,1,1,
0,0,1,1,1,1,1,1,
0,0,1,1,1,0,0,0,
0,0,1,1,1,0,0,0,
0,0,1,1,1,0,0,0,
0,0,1,1,1,0,0,0,
0,0,1,1,1,1,1,1,


1,1,1,1,1,1,0,0,
1,1,1,1,1,1,0,0,
1,1,1,1,1,1,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
1,1,1,1,0,0,0,0,


0,0,1,1,1,1,1,1,
0,0,1,1,1,0,0,0,
0,0,1,1,1,0,0,0,
0,0,1,1,1,0,0,0,
0,0,1,1,1,0,0,0,
0,0,1,1,1,1,1,1,
0,0,1,1,1,1,1,1,
0,0,1,1,1,1,1,1,


1,1,1,1,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
1,1,1,1,1,1,0,0,
1,1,1,1,1,1,0,0,
1,1,1,1,1,1,0,0,




0,0,1,1,1,1,1,1,
0,0,1,1,1,1,1,1,
0,0,1,1,1,0,0,0,
0,0,1,1,1,0,0,0,
0,0,1,1,1,0,0,0,
0,0,1,1,1,0,0,0,
0,0,1,1,1,0,0,0,
0,0,1,1,1,0,0,0,


1,1,1,0,0,0,0,0,
1,1,1,1,0,0,0,0,
0,0,1,1,1,0,0,0,
0,0,0,1,1,1,0,0,
0,0,0,1,1,1,0,0,
0,0,0,1,1,1,0,0,
0,0,0,1,1,1,0,0,
0,0,1,1,1,0,0,0,


0,0,1,1,1,1,1,1,
0,0,1,1,1,1,1,1,
0,0,1,1,1,0,0,0,
0,0,1,1,1,0,0,0,
0,0,1,1,1,0,0,0,
0,0,1,1,1,0,0,0,
0,0,1,1,1,0,0,0,
0,0,1,1,1,0,0,0,


1,1,1,1,0,0,0,0,
1,1,1,0,0,0,0,0,
0,1,1,1,0,0,0,0,
0,0,1,1,1,0,0,0,
0,0,0,1,1,1,0,0,
0,0,0,1,1,1,0,0,
0,0,0,1,1,1,0,0,
0,0,0,1,1,1,0,0,




0,0,0,0,0,0,0,5,
0,0,0,0,0,0,0,5,
0,0,0,0,0,0,0,5,
0,0,0,0,0,0,0,5,
0,0,0,0,0,0,0,5,
0,0,0,0,0,0,0,5,
0,0,0,0,0,0,0,5,
0,0,0,0,0,0,0,5,


5,0,0,0,0,0,0,0,
5,0,0,0,0,0,0,0,
5,0,0,0,0,0,0,0,
5,0,0,0,0,0,0,0,
5,0,0,0,0,0,0,0,
5,0,0,0,0,0,0,0,
5,0,0,0,0,0,0,0,
5,0,0,0,0,0,0,0,


0,0,0,0,0,0,0,5,
0,0,0,0,0,0,0,5,
0,0,0,0,0,0,0,5,
0,0,0,0,0,0,0,5,
0,0,0,0,0,0,0,5,
0,0,0,0,0,0,0,5,
0,0,0,0,0,0,0,5,
0,0,0,0,0,0,0,5,


5,0,0,0,0,0,0,0,
5,0,0,0,0,0,0,0,
5,0,0,0,0,0,0,0,
5,0,0,0,0,0,0,0,
5,0,0,0,0,0,0,0,
5,0,0,0,0,0,0,0,
5,0,0,0,0,0,0,0,
5,0,0,0,0,0,0,0,




0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,


0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,


0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,


0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,




0,1,1,1,1,1,0,0,
0,1,1,0,0,1,1,0,
0,1,1,0,0,1,1,0,
0,1,1,1,1,1,0,0,
0,1,1,0,0,0,0,0,
0,1,1,0,0,0,0,0,
0,1,1,0,0,0,0,0,
0,1,1,0,0,0,0,0,


0,1,1,1,1,1,0,0,
0,1,1,0,0,1,1,0,
0,1,1,0,0,1,1,0,
0,1,1,1,1,1,0,0,
0,1,1,1,1,1,0,0,
0,1,1,0,0,1,1,0,
0,1,1,0,0,1,1,0,
0,1,1,0,0,1,1,0,


0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,


0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,




0,1,1,1,1,1,1,0,
0,1,1,1,1,1,1,0,
0,1,1,0,0,0,0,0,
0,1,1,1,1,1,0,0,
0,1,1,1,1,1,0,0,
0,1,1,0,0,0,0,0,
0,1,1,1,1,1,1,0,
0,1,1,1,1,1,1,0,


0,0,1,1,1,1,0,0,
0,1,1,1,1,1,1,0,
0,1,1,0,0,0,0,0,
0,1,1,1,1,1,0,0,
0,0,1,1,1,1,1,0,
0,0,0,0,0,0,1,0,
0,1,1,1,1,1,1,0,
0,0,1,1,1,1,0,0,


0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,


0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,




0,0,1,1,1,1,0,0,
0,1,1,1,1,1,1,0,
0,1,1,0,0,0,0,0,
0,1,1,1,1,1,0,0,
0,0,1,1,1,1,1,0,
0,0,0,0,0,0,1,0,
0,1,1,1,1,1,1,0,
0,0,1,1,1,1,0,0,


0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,


0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,


0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,




0,0,1,1,1,1,0,0,
0,1,1,0,0,0,1,0,
0,1,1,0,0,0,0,0,
0,1,1,0,1,1,1,0,
0,1,1,0,1,1,1,0,
0,1,1,0,0,1,1,0,
0,1,1,1,1,1,1,0,
0,0,1,1,1,1,1,0,


0,0,1,1,1,1,0,0,
0,1,1,1,1,1,1,0,
0,1,1,0,0,1,1,0,
0,1,1,0,0,1,1,0,
0,1,1,1,1,1,1,0,
0,1,1,1,1,1,1,0,
0,1,1,0,0,1,1,0,
0,1,1,0,0,1,1,0,


0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,


0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,




1,1,0,0,0,0,1,1,
1,1,1,0,0,1,1,1,
1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,
1,1,0,1,1,0,1,1,
1,1,0,0,0,0,1,1,
1,1,0,0,0,0,1,1,
1,1,0,0,0,0,1,1,


0,1,1,1,1,1,1,0,
0,1,1,1,1,1,1,0,
0,1,1,0,0,0,0,0,
0,1,1,1,1,1,0,0,
0,1,1,1,1,1,0,0,
0,1,1,0,0,0,0,0,
0,1,1,1,1,1,1,0,
0,1,1,1,1,1,1,0,


0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,


0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,




0,0,1,1,1,1,0,0,
0,1,1,1,1,1,1,0,
0,1,1,0,0,1,1,0,
0,1,1,0,0,1,1,0,
0,1,1,0,0,1,1,0,
0,1,1,0,0,1,1,0,
0,1,1,1,1,1,1,0,
0,0,1,1,1,1,0,0,


0,1,1,0,0,1,1,0,
0,1,1,0,0,1,1,0,
0,1,1,0,0,1,1,0,
0,1,1,0,0,1,1,0,
0,1,1,0,0,1,1,0,
0,1,1,0,0,1,1,0,
0,0,1,1,1,1,0,0,
0,0,0,1,1,0,0,0,


0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,


0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,




0,1,1,1,1,1,1,0,
0,1,1,1,1,1,1,0,
0,1,1,0,0,0,0,0,
0,1,1,1,1,1,0,0,
0,1,1,1,1,1,0,0,
0,1,1,0,0,0,0,0,
0,1,1,1,1,1,1,0,
0,1,1,1,1,1,1,0,


0,1,1,1,1,1,0,0,
0,1,1,0,0,1,1,0,
0,1,1,0,0,1,1,0,
0,1,1,1,1,1,0,0,
0,1,1,1,1,1,0,0,
0,1,1,0,0,1,1,0,
0,1,1,0,0,1,1,0,
0,1,1,0,0,1,1,0,


0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,


0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,




0,0,0,0,0,2,2,2,
0,0,0,0,2,3,3,3,
0,0,0,2,3,3,15,15,
0,0,0,2,3,15,15,15,
0,0,0,2,3,15,0,15,
0,0,0,2,3,15,15,15,
0,0,0,2,3,3,15,15,
0,0,0,2,3,3,3,15,


2,2,2,0,0,0,0,0,
3,3,3,2,0,0,0,0,
15,15,3,3,2,0,0,0,
15,15,15,3,2,0,0,0,
15,0,15,3,2,0,0,0,
15,15,15,3,2,0,0,0,
15,15,3,3,2,0,0,0,
15,3,3,3,2,0,0,0,


0,0,10,10,3,3,3,15,
0,10,10,10,10,10,10,10,
10,10,5,5,10,10,10,10,
10,10,5,5,10,6,6,10,
10,10,10,10,10,6,6,10,
0,10,10,10,10,10,10,10,
0,0,10,10,10,10,10,10,
0,0,0,0,10,10,10,10,


15,3,3,3,10,10,0,0,
10,10,10,10,10,10,10,0,
10,10,10,10,7,7,10,10,
10,20,20,10,7,7,10,10,
10,20,20,10,10,10,10,10,
10,10,10,10,10,10,10,0,
10,10,10,10,10,10,0,0,
10,10,10,10,0,0,0,0,



0,0,1,1,1,1,0,0,
0,1,1,0,0,0,1,0,
0,1,1,0,0,1,1,0,
0,1,1,0,1,0,1,0,
0,1,1,1,0,0,1,0,
0,1,1,0,0,0,1,0,
0,1,1,0,0,0,1,0,
0,0,1,1,1,1,0,0,

0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,


0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,


0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,



0,0,0,0,1,0,0,0,
0,0,1,1,1,0,0,0,
0,0,0,1,1,0,0,0,
0,0,0,1,1,0,0,0,
0,0,0,1,1,0,0,0,
0,0,0,1,1,0,0,0,
0,0,0,1,1,0,0,0,
0,0,1,1,1,1,0,0,

0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,


0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,


0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,


0,0,1,1,1,1,0,0,
0,1,1,1,1,1,1,0,
0,1,0,0,0,0,1,0,
0,0,0,0,0,1,1,0,
0,0,0,0,1,1,0,0,
0,0,0,1,1,0,0,0,
0,0,1,1,0,0,0,0,
0,1,1,1,1,1,1,0,


0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,


0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,


0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,


0,0,1,1,1,1,0,0,
0,1,1,1,1,1,1,0,
0,1,0,0,0,0,1,0,
0,0,0,0,0,0,1,0,
0,0,0,1,1,1,0,0,
0,0,0,0,0,0,1,0,
0,1,0,0,0,0,1,0,
0,0,1,1,1,1,0,0,

0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,


0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,


0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,


0,0,0,0,1,1,0,0,
0,0,0,1,1,1,0,0,
0,0,1,1,0,1,0,0,
0,1,1,0,0,1,0,0,
0,1,1,1,1,1,0,0,
0,0,0,0,1,1,0,0,
0,0,0,0,1,1,0,0,
0,0,0,0,1,1,0,0,

0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,


0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,


0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,

0,1,1,1,1,1,1,0,
0,1,1,1,1,1,1,0,
0,1,1,0,0,0,0,0,
0,1,1,0,0,0,0,0,
0,0,1,1,1,1,0,0,
0,0,0,0,0,0,1,0,
0,1,0,0,0,0,1,0,
0,0,1,1,1,1,0,0,


0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,


0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,


0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,


0,0,0,1,1,1,1,0,
0,0,1,1,1,1,1,0,
0,1,1,0,0,0,0,0,
0,1,1,0,0,0,0,0,
0,1,1,1,1,1,0,0,
0,1,1,0,0,0,1,0,
0,1,1,0,0,0,1,0,
0,0,1,1,1,1,0,0,


0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,


0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,


0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,


0,1,1,1,1,1,1,0,
0,1,1,1,1,1,1,0,
0,1,0,0,0,1,1,0,
0,0,0,0,1,1,0,0,
0,0,0,0,1,1,0,0,
0,0,0,1,1,0,0,0,
0,0,0,1,1,0,0,0,
0,0,1,1,0,0,0,0,

0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,


0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,


0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,

0,0,1,1,1,1,0,0,
0,1,1,1,1,1,1,0,
0,1,1,0,0,0,1,0,
0,0,1,0,0,0,1,0,
0,0,1,1,1,1,0,0,
0,1,1,0,0,0,1,0,
0,1,1,0,0,0,1,0,
0,0,1,1,1,1,0,0,

0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,


0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,


0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,


0,0,1,1,1,1,0,0,
0,1,1,1,1,1,1,0,
0,1,1,0,0,0,1,0,
0,1,1,0,0,0,1,0,
0,0,1,1,1,1,1,0,
0,0,0,0,0,1,1,0,
0,0,0,0,0,1,1,0,
0,0,0,0,0,1,1,0,

0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,


0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,


0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,



0,1,0,0,0,0,1,0,
0,1,0,0,0,0,1,0,
0,1,0,0,0,0,1,0,
0,1,0,0,0,0,1,0,
0,1,0,1,1,0,1,0,
0,1,1,1,1,1,1,0,
0,1,1,0,0,1,1,0,
0,1,0,0,0,0,1,0,


0,0,0,1,1,0,0,0,
0,0,0,1,1,0,0,0,
0,0,0,1,1,0,0,0,
0,0,0,1,1,0,0,0,
0,0,0,1,1,0,0,0,
0,0,0,1,1,0,0,0,
0,0,0,1,1,0,0,0,
0,0,0,1,1,0,0,0,

0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,


0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,



0,1,0,0,0,0,1,0,
0,1,1,0,0,0,1,0,
0,1,1,1,0,0,1,0,
0,1,0,1,1,0,1,0,
0,1,0,0,1,1,1,0,
0,1,0,0,0,1,1,0,
0,1,0,0,0,0,1,0,
0,1,0,0,0,0,1,0,


0,0,0,1,1,0,0,0,
0,0,0,1,1,0,0,0,
0,0,0,1,1,0,0,0,
0,0,0,1,1,0,0,0,
0,0,0,1,1,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,1,1,0,0,0,
0,0,0,1,1,0,0,0,

0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,


0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
};
# 5 "main.c" 2

# 1 "/usr/local/lib/gcc-lib/arm-thumb-elf/3.3.6/include/stdbool.h" 1 3 4
# 7 "main.c" 2



int x_position = 0;
int y_position = 144;

int time_count;

int a;

int laser_counter=0;



int laser_arr[20][4];


int start_stop=0;


int count = 0;
int count_1 = -32;
int count_2 = -64;
int count_3 = -96;
int count_4 = -128;



int obj_arr[5][6] = {
                                                        {0,16,32,48,64,0},
                                                        {224,192,64,96,112,-32},
                                                        {0,16,32,112,176,-64},
                                                        {32,208,80,96,240,-96},
                                                        {176,192,208,224,160,-128},
                                                        };



int lvl2_obj_arr[5][7] = {
                                                        {48,64,80,96,112,128,0},
                                                        {16,112,128,144,160,176,-32},
                                                        {48,176,192,208,224,240,-64},
                                                        {80,96,112,128,208,224,-96},
                                                        {16,96,112,160,176,224,-128},
                                                        };

void drawSprite(int numb, int N, int x, int y)
{

    *(unsigned short *)(0x7000000 + 8*N) = y | 0x2000;
    *(unsigned short *)(0x7000002 + 8*N) = x | 0x4000;
    *(unsigned short *)(0x7000004 + 8*N) = numb*8;
}

void checkbutton(void)
{

    u16 buttons = (0x3FF & (~*(volatile u16*)0x4000130));

    if ((buttons & 0x001) == 0x001)
    {
        buttonA();
    }
    if ((buttons & 0x008) == 0x008)
    {
        buttonS();
    }
    if ((buttons & 0x010) == 0x010)
    {
        buttonR();
    }
    if ((buttons & 0x020) == 0x020)
    {
        buttonL();
    }
    if ((buttons & 0x040) == 0x040)
    {
        buttonU();
    }
    if ((buttons & 0x080) == 0x080)
    {
        buttonD();
    }
}

void buttonA(void)
{
        laser_counter+=1;
        laser_arr[laser_counter][0] = 40+laser_counter;
        laser_arr[laser_counter][1] = x_position;
        laser_arr[laser_counter][2] = y_position;
        laser_arr[laser_counter][3] = 0;
        if(laser_counter>10)
        {
                laser_counter = 0;
        }
}


void black_screen(void) {
        int i;
        int j;
        int k=0;

        for(i=0;i<240;i+=16) {
                for(j=0;j<160;j+=16) {
                        drawSprite(19,100+k,i,j);
                        k +=1;
                }
        }
}


void start_screen(void) {
        if(start_stop%2 == 0) {

        drawSprite(1,51,100,120);
        drawSprite(2,52,116,120);
        drawSprite(3,53,132,120);
        drawSprite(5,55,80,48);
        drawSprite(6,56,96,48);
        drawSprite(7,57,112,48);
        drawSprite(8,58,128,48);
        drawSprite(9,59,144,48);
        drawSprite(10,60,56,70);
        drawSprite(11,61,72,70);
        drawSprite(12,62,88,70);
        drawSprite(13,63,104,70);
        drawSprite(14,64,120,70);
        drawSprite(15,65,136,70);
        drawSprite(16,66,152,70);
        drawSprite(17,67,168,70);
        drawSprite(20,68,100,100);
        drawSprite(21,69,116,100);
        drawSprite(22,70,132,100);
        }
}

void out_screen(void) {

        drawSprite(1,51,-16,-16);
        drawSprite(2,52,-16,-16);
        drawSprite(3,53,-16,-16);
        drawSprite(5,55,-16,-16);
        drawSprite(6,56,-16,-16);
        drawSprite(7,57,-16,-16);
        drawSprite(8,58,-16,-16);
        drawSprite(9,59,-16,-16);
        drawSprite(10,60,-16,-16);
        drawSprite(11,61,-16,-16);
        drawSprite(12,62,-16,-16);
        drawSprite(13,63,-16,-16);
        drawSprite(14,64,-16,-16);
        drawSprite(15,65,-16,-16);
        drawSprite(16,66,-16,-16);
        drawSprite(17,67,-16,-16);
        drawSprite(20,68,-16,-16);
        drawSprite(21,69,-16,-16);
        drawSprite(22,70,-16,-16);
}

void buttonS(void)
{
         start_stop += 1;
         int i;
         int j;

         if (start_stop%2 == 1)
         {
                *(u16*)0x4000104 = 1433;
                *(u16*)0x4000106 = 0x0002|0x0080|0x0040;

        *(u16*)0x4000100 = 56763;
        *(u16*)0x4000102 = 0x0001|0x0080|0x0040;


                for (i=0;i<20;i++) {
                        for(j=0;j<4;j++) {
                                laser_arr[i][j] = 0;
                        }
                }
                count = 0;
                count_1 = -32;
                count_2 = -64;
                count_3 = -96;
                count_4 = -128;
                out_screen();
         }
         else
         {
                *(u16*)0x4000104 = 1433;
                *(u16*)0x4000106 = 0x0002|0x0080;

        *(u16*)0x4000100 = 56763;
        *(u16*)0x4000102 = 0x0001|0x0080;

                black_screen();
                time_count = 0;
                x_position = 0;
                y_position = 144;
                a=-1;
         }
}


void buttonR(void)
{
         x_position += 1;
         if (x_position > 224) {
                x_position -= 16;
         }
         return x_position;
}

void buttonL(void)
{
        x_position -= 1;
        if (x_position < 0) {
                x_position += 16;
        }
        return x_position;
}

void buttonU(void)
{
         y_position -= 1;
         if (y_position < 0) {
                y_position += 16;
         }
         return y_position;
}

void buttonD(void)
{
         y_position += 1;
         if (y_position > 144) {
                y_position -= 16;
         }
         return y_position;
}


void objinit(void)
{
        int num = 0;
        if(time_count<50){
        for (num = 0; num < 5; num++)
        {
                drawSprite(4,num+10,obj_arr[0][num],count);
                drawSprite(4,num+15,obj_arr[1][num],count_1);
                drawSprite(4,num+20,obj_arr[2][num],count_2);
                drawSprite(4,num+25,obj_arr[3][num],count_3);
                drawSprite(4,num+30,obj_arr[4][num],count_4);
        }
        int i;



        int row0[] = {0,16,32,48,64,0};
        int row1[] = {224,192,64,96,112,-32};
        int row2[] = {0,16,32,112,176,-64};
        int row3[] = {32,208,80,96,240,-96};
        int row4[] = {176,192,208,224,160,-128};

        if (count>=160) {
                count = 0;
                for (i=0;i<5;i++) {
                        obj_arr[0][i] = row0[i];
                }
        }
        if (count_1>=160) {
                count_1 = -32;
                for (i=0;i<5;i++) {
                        obj_arr[1][i] = row1[i];
                }
        }
        if (count_2>=160) {
                count_2 = -64;
                for (i=0;i<5;i++) {
                        obj_arr[2][i] = row2[i];
                }
        }
        if (count_3>=160) {
                count_3 = -96;
                for (i=0;i<5;i++) {
                        obj_arr[3][i] = row3[i];
                }
        }
        if (count_4>=160) {
                count_4 = -128;
                for (i=0;i<5;i++) {
                        obj_arr[4][i] = row4[i];
                }
        }

        obj_arr[0][5] = count;
        obj_arr[1][5] = count_1;
        obj_arr[2][5] = count_2;
        obj_arr[3][5] = count_3;
        obj_arr[4][5] = count_4;
        }
        else if (time_count>=50 && time_count<101) {
        if (time_count ==50) {
                count = 0;
                count_1 = -32;
                count_2 = -64;
                count_3 = -96;
                count_4 = -128;
        }
        for (num = 0; num < 6; num++)
        {
                drawSprite(27,num+10,lvl2_obj_arr[0][num],count);
                drawSprite(27,num+16,lvl2_obj_arr[1][num],count_1);
                drawSprite(27,num+22,lvl2_obj_arr[2][num],count_2);
                drawSprite(27,num+28,lvl2_obj_arr[3][num],count_3);
                drawSprite(27,num+34,lvl2_obj_arr[4][num],count_4);
        }
        int i;



        int row5[] = {48,64,80,96,112,128,0};
        int row6[] = {16,112,128,144,160,176,-32};
        int row7[] = {48,176,192,208,224,240,-64};
        int row8[] = {80,96,112,128,208,224,-96};
        int row9[] = {16,96,112,160,176,224,-128};

        if (count>=160) {
                count = 0;
                for (i=0;i<6;i++) {
                        lvl2_obj_arr[0][i] = row5[i];
                }
        }
        if (count_1>=160) {
                count_1 = -32;
                for (i=0;i<6;i++) {
                        lvl2_obj_arr[1][i] = row6[i];
                }
        }
        if (count_2>=160) {
                count_2 = -64;
                for (i=0;i<6;i++) {
                        lvl2_obj_arr[2][i] = row7[i];
                }
        }
        if (count_3>=160) {
                count_3 = -96;
                for (i=0;i<6;i++) {
                        lvl2_obj_arr[3][i] = row8[i];
                }
        }
        if (count_4>=160) {
                count_4 = -128;
                for (i=0;i<6;i++) {
                        lvl2_obj_arr[4][i] = row9[i];
                }
        }

        lvl2_obj_arr[0][6] = count;
        lvl2_obj_arr[1][6] = count_1;
        lvl2_obj_arr[2][6] = count_2;
        lvl2_obj_arr[3][6] = count_3;
        lvl2_obj_arr[4][6] = count_4;
        }
        if(time_count>100) {
        if (time_count == 101) {
                count = 0;
                count_1 = -32;
                count_2 = -64;
                count_3 = -96;
                count_4 = -128;
        }
                time_count =100;
                drawSprite(38,21,104,76);
                drawSprite(39,22,120,76);
                drawSprite(1,100,100,140);
                drawSprite(2,101,116,140);
                drawSprite(3,102,132,140);
                drawSprite(20,99,100,120);
                drawSprite(21,98,116,120);
                drawSprite(22,97,132,120);

        }
}

void laserinit(void)
{
        int num;
        int y;
        for(num=0;num<10;num++)
        {
                y = laser_arr[num][2]+laser_arr[num][3];
                drawSprite(18,laser_arr[num][0],laser_arr[num][1],y);
                laser_arr[num][3] -= 4;
                if(y < 0)
                {
                        laser_arr[num][1] = 0;
                        laser_arr[num][2] = -16;
                        laser_arr[num][3] = -16;
                }
        }
}

void collideinit(void)


{
        int i;
        int j;
        int k;
        int x;
        int y;
        if (a <=50) {
        for (i=0;i<20;i++)
        {
                for(j=0;j<4;j++)
                {
                        for(k=0;k<5;k++)
                        {
                                if( (obj_arr[j][k] <= laser_arr[i][1]+5) && ((obj_arr[j][k]+15) >= laser_arr[i][1]))
                                {
                                        if((obj_arr[j][5]-8 <= (laser_arr[i][2]+laser_arr[i][3])) && ((obj_arr[j][5]+15) >= (laser_arr[i][2]+laser_arr[i][3])))
                                        {
                                                obj_arr[j][k] = -100;
                                                laser_arr[i][2] = -100;
                                        }
                                }
                                if( (obj_arr[j][k] <= laser_arr[i][1]+9) && ((obj_arr[j][k]+15) >= laser_arr[i][1]))
                                {
                                        if((obj_arr[j][5]-8 <= (laser_arr[i][2]+laser_arr[i][3])) && ((obj_arr[j][5]+15) >= (laser_arr[i][2]+laser_arr[i][3])))
                                        {
                                                obj_arr[j][k] = -100;
                                                laser_arr[i][2] = -100;
                                        }
                                }
                        }
                }
        }


        for(x=0;x<5;x++){
                for(y=0;y<5;y++){
                        if (y_position <= obj_arr[x][5]+15 && y_position >= obj_arr[x][5]){
                                if (x_position >= obj_arr[x][y] && x_position <= obj_arr[x][y]+15){
                                        *(u16*)0x4000102 = 0x0001|0x0080;
                                        *(u16*)0x4000106 = 0x0001|0x0080;
                                        drawSprite(23,21,84,76);
                                        drawSprite(24,22,100,76);
                                        drawSprite(25,23,124,76);
                                        drawSprite(26,24,140,76);
                                        drawSprite(1,100,100,120);
                                        drawSprite(2,101,116,120);
                                        drawSprite(3,102,132,120);
                                        drawSprite(20,99,100,100);
                                        drawSprite(21,98,116,100);
                                        drawSprite(22,97,132,100);
                                }
                        }
                        if (y_position+15 <= obj_arr[x][5]+15 && y_position+15 >= obj_arr[x][5] ){
                                if (x_position+15 >= obj_arr[x][y] && x_position+15 <= obj_arr[x][y]+15){
                                        *(u16*)0x4000102 = 0x0001|0x0080;
                                        *(u16*)0x4000106 = 0x0001|0x0080;
                                        drawSprite(23,21,84,76);
                                        drawSprite(24,22,100,76);
                                        drawSprite(25,23,124,76);
                                        drawSprite(26,24,140,76);
                                        drawSprite(1,100,100,120);
                                        drawSprite(2,101,116,120);
                                        drawSprite(3,102,132,120);
                                        drawSprite(20,99,100,100);
                                        drawSprite(21,98,116,100);
                                        drawSprite(22,97,132,100);
                                }
                        }
                        if (y_position+15 <= obj_arr[x][5]+15 && y_position+15 >= obj_arr[x][5] ){
                                if (x_position >= obj_arr[x][y] && x_position <= obj_arr[x][y]+15){
                                        *(u16*)0x4000102 = 0x0001|0x0080;
                                        *(u16*)0x4000106 = 0x0001|0x0080;
                                        drawSprite(23,21,84,76);
                                        drawSprite(24,22,100,76);
                                        drawSprite(25,23,124,76);
                                        drawSprite(26,24,140,76);
                                        drawSprite(1,100,100,120);
                                        drawSprite(2,101,116,120);
                                        drawSprite(3,102,132,120);
                                        drawSprite(20,99,100,100);
                                        drawSprite(21,98,116,100);
                                        drawSprite(22,97,132,100);
                                }
                        }
                        if (y_position <= obj_arr[x][5]+15 && y_position >= obj_arr[x][5] ){
                                if (x_position+15 >= obj_arr[x][y] && x_position+15 <= obj_arr[x][y]+15){
                                        *(u16*)0x4000102 = 0x0001|0x0080;
                                        *(u16*)0x4000106 = 0x0001|0x0080;
                                        drawSprite(23,21,84,76);
                                        drawSprite(24,22,100,76);
                                        drawSprite(25,23,124,76);
                                        drawSprite(26,24,140,76);
                                        drawSprite(1,100,100,120);
                                        drawSprite(2,101,116,120);
                                        drawSprite(3,102,132,120);
                                        drawSprite(20,99,100,100);
                                        drawSprite(21,98,116,100);
                                        drawSprite(22,97,132,100);
                                }
                        }
                }
        }
        }
        else if (a > 50) {
        for (i=0;i<20;i++)
        {
                for(j=0;j<4;j++)
                {
                        for(k=0;k<6;k++)
                        {
                                if( (lvl2_obj_arr[j][k] <= laser_arr[i][1]) && ((lvl2_obj_arr[j][k]+15) >= laser_arr[i][1]))
                                {
                                        if((lvl2_obj_arr[j][6] <= (laser_arr[i][2]+laser_arr[i][3])) && ((lvl2_obj_arr[j][6]+15) >= (laser_arr[i][2]+laser_arr[i][3])))
                                        {
                                                lvl2_obj_arr[j][k] = -100;
                                                laser_arr[i][2] = -100;
                                        }
                                }
                                if( (obj_arr[j][k] <= laser_arr[i][1]+9) && ((obj_arr[j][k]+15) >= laser_arr[i][1]))
                                {
                                        if((obj_arr[j][5]-8 <= (laser_arr[i][2]+laser_arr[i][3])) && ((obj_arr[j][5]+15) >= (laser_arr[i][2]+laser_arr[i][3])))
                                        {
                                                obj_arr[j][k] = -100;
                                                laser_arr[i][2] = -100;
                                        }
                                }
                        }
                }
        }
        for(x=0;x<5;x++){
                for(y=0;y<6;y++){
                        if (y_position <= lvl2_obj_arr[x][6]+15 && y_position >= lvl2_obj_arr[x][6]){
                                if (x_position >= lvl2_obj_arr[x][y] && x_position <= lvl2_obj_arr[x][y]+15){
                                        *(u16*)0x4000102 = 0x0001|0x0080;
                                        *(u16*)0x4000106 = 0x0001|0x0080;
                                        drawSprite(23,21,84,76);
                                        drawSprite(24,22,100,76);
                                        drawSprite(25,23,124,76);
                                        drawSprite(26,24,140,76);
                                        drawSprite(1,100,100,120);
                                        drawSprite(2,101,116,120);
                                        drawSprite(3,102,132,120);
                                        drawSprite(20,99,100,100);
                                        drawSprite(21,98,116,100);
                                        drawSprite(22,97,132,100);
                                }
                        }
                        if (y_position+15 <= lvl2_obj_arr[x][6]+15 && y_position+15 >= lvl2_obj_arr[x][6] ){
                                if (x_position+15 >= lvl2_obj_arr[x][y] && x_position+15 <= lvl2_obj_arr[x][y]+15){
                                        *(u16*)0x4000102 = 0x0001|0x0080;
                                        *(u16*)0x4000106 = 0x0001|0x0080;
                                        drawSprite(23,21,84,76);
                                        drawSprite(24,22,100,76);
                                        drawSprite(25,23,124,76);
                                        drawSprite(26,24,140,76);
                                        drawSprite(1,100,100,120);
                                        drawSprite(2,101,116,120);
                                        drawSprite(3,102,132,120);
                                        drawSprite(20,99,100,100);
                                        drawSprite(21,98,116,100);
                                        drawSprite(22,97,132,100);
                                }
                        }
                        if (y_position+15 <= lvl2_obj_arr[x][6]+15 && y_position+15 >= lvl2_obj_arr[x][6] ){
                                if (x_position >= lvl2_obj_arr[x][y] && x_position <= lvl2_obj_arr[x][y]+15){
                                        *(u16*)0x4000102 = 0x0001|0x0080;
                                        *(u16*)0x4000106 = 0x0001|0x0080;
                                        drawSprite(23,21,84,76);
                                        drawSprite(24,22,100,76);
                                        drawSprite(25,23,124,76);
                                        drawSprite(26,24,140,76);
                                        drawSprite(1,100,100,120);
                                        drawSprite(2,101,116,120);
                                        drawSprite(3,102,132,120);
                                        drawSprite(20,99,100,100);
                                        drawSprite(21,98,116,100);
                                        drawSprite(22,97,132,100);
                                }
                        }
                        if (y_position <= lvl2_obj_arr[x][6]+15 && y_position >= lvl2_obj_arr[x][6] ){
                                if (x_position+15 >= lvl2_obj_arr[x][y] && x_position+15 <= lvl2_obj_arr[x][y]+15){
                                        *(u16*)0x4000102 = 0x0001|0x0080;
                                        *(u16*)0x4000106 = 0x0001|0x0080;
                                        drawSprite(23,21,84,76);
                                        drawSprite(24,22,100,76);
                                        drawSprite(25,23,124,76);
                                        drawSprite(26,24,140,76);
                                        drawSprite(1,100,100,120);
                                        drawSprite(2,101,116,120);
                                        drawSprite(3,102,132,120);
                                        drawSprite(20,99,100,100);
                                        drawSprite(21,98,116,100);
                                        drawSprite(22,97,132,100);

                                }
                        }
                }
        }
        }
}

void moving_downwards(void){
        y_position+=1;
        if(y_position>=144){
                y_position = 144; }
}


void Handler(void)
{
    *(u16*)0x4000208 = 0x00;

    if ((*(u16*)0x4000202 & 0x8 ) == 0x8)
    {
                drawSprite(0,0,x_position,y_position);
                checkbutton();
                moving_downwards();
                collideinit();
                checkbutton();
         }

    if ((*(u16*)0x4000202 & 0x10 ) == 0x10)
    {
                count += 16;
                count_1 += 16;
                count_2 += 16;
                count_3 += 16;
                count_4 += 16;
                objinit();
                laserinit();

                time_count=timer_count(a);
                a=timer_count(a);
                drawSprite(((time_count/100)+28),1,208,16);
                drawSprite((((time_count/10)%10)+28),2,216,16);
                drawSprite(((time_count%10)+28),3,224,16);

         }

    if ((*(u16*)0x4000202 & 0x20 ) == 0x20)
    {
                checkbutton();
                start_screen();

         }

    *(u16*)0x4000202 = *(u16*)0x4000202;

    *(u16*)0x4000208 = 0x01;
}

int main(void)
{
        int i;
        int j;

    *(unsigned short *) 0x4000000 = 0x40 | 0x2 | 0x1000;

    for (i = 0; i < 20; i++)
                  ((unsigned short *) 0x5000200)[i] = palette[i];

    for (i = 0; i < 128*16*16; i++)
        ((unsigned short *) 0x6010000)[i] = (sprites[i*2+1] << 8) + sprites[i*2];

         for(j=2;j<277;j++) {
                                drawSprite(0,j,240,160);
                        }



         (*(unsigned int*)0x3007FFC) = (int)&Handler;
    *(u16*)0x4000200 = 0x8|0x10|0x20;
         *(u16*)0x4000208 = 0x1;

         *(u16*)0x4000108 = 56763;
         *(u16*)0x400010A = 0x0001|0x0080|0x0040;

         *(u16*)0x4000104 = 1433;
         *(u16*)0x4000106 = 0x0002|0x0080;

    *(u16*)0x4000100 = 56763;
    *(u16*)0x4000102 = 0x0001|0x0080;

         while(1)
         {}

        return 0;
}
